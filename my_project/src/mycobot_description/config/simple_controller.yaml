controller_manager:
  ros__parameters:
    update_rate: 100 # Hz

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    # The JointTrajectoryController allows you to send joint trajectory commands to a group 
    # of joints on a robot. These commands specify the desired positions for each joint.  
    arm_controller:
      type: joint_trajectory_controller/JointTrajectoryController


arm_controller:
  ros__parameters:
    joints:
      - joint2_to_joint1
      - joint3_to_joint2
      - joint4_to_joint3
      - joint5_to_joint4
      - joint6_to_joint5
      - joint6output_to_joint6

    write_op_modes:
      - joint2_to_joint1
      - joint3_to_joint2
      - joint4_to_joint3
      - joint5_to_joint4
      - joint6_to_joint5
      - joint6output_to_joint6
    
    interface_name: position

    # The controller will expect position commands as input for each of these joints.
    command_interfaces:
      - position

    # Tells the controller that it should expect to receive position and velocity data as the state 
    # feedback from the hardware interface,
    state_interfaces:
      - position
      # - velocity # Can't activate controller 'arm_controller': State interface with key 'joint2_to_joint1/velocity' does not exist

    state_publish_rate: 50.0 # Defaults to 50
    action_monitor_rate: 20.0 # Defaults to 20

    allow_partial_joints_goal: false # Defaults to false
    hardware_state_has_offset: true
    deduce_states_from_derivatives: true
    
    # If true, When set to true, the controller will not use any feedback from the system 
    # (e.g., joint positions, velocities, efforts) to compute the control commands.
    open_loop_control: true

    # When set to true, it allows the controller to integrate the trajectory goals it receives.
    # This means that if the goal trajectory only specifies positions, the controller will 
    # numerically integrate the positions to compute the velocities and accelerations required 
    # to follow the trajectory.
    # allow_integration_in_goal_trajectories: true

    # Allow non-zero velocity at the end of the trajectory
    # allow_nonzero_velocity_at_trajectory_end: true

    constraints:
      stopped_velocity_tolerance: 0.01 # Defaults to 0.01
      goal_time: 0.0 # Defaults to 0.0 (start immediately)